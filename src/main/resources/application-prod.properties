spring.main.allow-bean-definition-overriding=true

#spring.datasource.url=jdbc:mysql://localhost:3306/db
#spring.datasource.username=
#spring.datasource.password=   
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.jpa.database-platform = org.hibernate.dialect.MySQL5Dialect
#spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto = update
#spring.datasource.initialization-mode=always

spring.mvc.static-path-pattern=/assets/**, /resources/records/img/**, 

logging.level.com.visionous.dms = ERROR
logging.level.org.springframework.web= ERROR
logging.level.org.hibernate.SQL=ERROR
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=ERROR
logging.level.org.hibernate.orm.jdbc.bind=ERROR
logging.level.org.hibernate= INFO


# Spring mail setting for Hotmail
#spring.mail.host=smtp-mail.outlook.com
#spring.mail.port=587
#spring.mail.username=lezha@hotmail.it
#spring.mail.password=arber1985
#spring.mail.protocol=smtp
#spring.mail.defaultEncoding=UTF-8
#spring.mail.properties.mail.smtp.auth=true
#spring.mail.properties.mail.smtp.starttls.enable=true
#spring.mail.properties.mail.smtp.socketFactory.port = 587
#spring.mail.properties.mail.smtp.ssl.enable=false

# Spring mail setting for GMAIL
spring.mail.host=smtp-mail.outlook.com

spring.mail.port=587
spring.mail.username=klevin.delimeta@hotmail.com
spring.mail.password=Klklkl@002
spring.mail.protocol=smtp
spring.mail.defaultEncoding=UTF-8
spring.mail.properties.mail.smtp.from=klevin.delimeta@hotmail.com
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.socketFactory.port = 587
spring.mail.properties.mail.smtp.ssl.enable=false

# Spring mail setting for GMAIL
#spring.mail.host=smtp.gmail.com
#spring.mail.port=587
#spring.mail.username=klevindelimeta@gmail.com
#spring.mail.password=Klklkl@003
#spring.mail.protocol=smtp
#spring.mail.defaultEncoding=UTF-8
#spring.mail.properties.mail.smtp.auth=true
#spring.mail.properties.mail.smtp.starttls.enable=true
#spring.mail.properties.mail.smtp.socketFactory.port = 587
#spring.mail.properties.mail.smtp.ssl.enable=false

# Multipart File Upload Settings
spring.servlet.multipart.max-file-size=1GB
spring.servlet.multipart.max-request-size=1GB

spring.servlet.multipart.enabled=true
spring.servlet.multipart.location=${java.io.tmpdir}

hibernate.show_sql = true
logging.file.path=\logs\

dcms.app.version=@project.version@


# Oracle settings
#spring.datasource.url=jdbc:oracle:thin:@localhost:1521:orcl
#spring.datasource.username=system
#spring.datasource.password=Klklkl007
#spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver

# Postgress vmi host Alpha Test Db
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.datasource.url=jdbc:postgresql://vmi484031.contaboserver.net:5432/proddcmsdb
spring.datasource.username=productiondcmsadmin
spring.datasource.password=aFcZ./GgG@WE%cIPsru
spring.datasource.driver-class-name=org.postgresql.Driver

#Oracle awsdmsdb ilsorriso
#spring.datasource.url=jdbc:oracle:thin:@dmsorcl.cnbruz1dngl2.eu-central-1.rds.amazonaws.com:1521/DMS
#spring.datasource.username=dmsdbadmin
#spring.datasource.password=Klklkl007
#spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver

#Oracle awsdmsdb BrilliantDent
#spring.datasource.url=jdbc:oracle:thin:@brilliantdentdmsdb.cnbruz1dngl2.eu-central-1.rds.amazonaws.com:1521/BRIDENT
#spring.datasource.username=dmsdbadmin
#spring.datasource.password=Klklkl007
#spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver

#### KEYCLOAK ####
keycloak.enabled=true

# keycloak oauth client config (Connect to prod for now)
spring.security.oauth2.client.registration.keycloak.client-id=oxydent-login
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.scope=openid
spring.security.oauth2.authorizationserver.endpoint.authorization-uri=https://authentication.o2dent.com/realms/master/protocol/openid-connect/auth
spring.security.oauth2.authorizationserver.endpoint.oidc.logout-uri=https://authentication.o2dent.com/realms/master/protocol/openid-connect/logout

# Configure OIDC provider
spring.security.oauth2.client.provider.keycloak.issuer-uri=https://authentication.o2dent.com/realms/master
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username

# validation of jwt on keycloak
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://authentication.o2dent.com/realms/master

### CONSUL ###
spring.cloud.consul.enabled=true

spring.application.name=@project.artifactId@
build.version=@project.version@
build.timestamp=@timestamp@

spring.cloud.consul.discovery.prefer-ip-address=false
spring.cloud.consul.discovery.prefer-agent-address=false

spring.cloud.consul.discovery.service-name=${spring.application.name}
spring.cloud.consul.discovery.instance-id=${spring.application.name}:${spring.profiles.active}:${vcap.application.instance_id:${spring.application.instance_id:${random.value}}}
spring.cloud.consul.discovery.acl-token=3c30cc81-70ea-ccfd-2694-7eda57b7b21a
spring.cloud.consul.discovery.health-check-path=/my-health-check
spring.cloud.consul.discovery.health-check-interval=5s
spring.cloud.consul.discovery.enabled=true
#spring.cloud.consul.discovery.health-check-url=192.168.1.251:8080/my-health-check
#spring.cloud.consul.discovery.health-check-url.enabled=true
spring.cloud.consul.host = http://o2dent.com
spring.cloud.consul.port =  8500

## Let spring search consul for config import first
## If consul server is not up Spring will import config from '.properties' config file.
spring.config.import=optional:consul:/

## Consul client configuration
spring.cloud.consul.config.enabled=true
## Key to lookup configuration, i.e filepath
spring.cloud.consul.config.data-key= ${spring.profiles.active}/data
## Consul file prefix on server, i.e folderpath
spring.cloud.consul.config.prefix= config
## Type of file to import
spring.cloud.consul.config.format= yaml